#!/bin/bash
set -e

help_menu() {
    echo ""
    echo "Usage:    update [OPTIONS]"
    echo ""
    echo "A tool that wraps the commands for updating AUX-CLI and software installed via apt-get."
    echo ""
    echo "Options:"
    echo "-a    --aux           Updates AUX-CLI to the latest version."
    echo "-p    --pi            Alias for apt-get update/upgrade"
    echo "-h    --help          Displays this help information."
    echo ""
    exit 1
}

err_msg() {
    echo ""
    echo "\"$1\" is an invalid argument."
    echo "Run update -h for help."
    echo ""
    exit 1
}

update_aux() {
    # If hotspot mode is true, then do the work around
    if . /lib/aux-cli/util/snippets/hotspot_check; then
        . /lib/aux-cli/util/snippets/dhcpcd_set
        sleep 10
        docker-compose pull && docker-compose up -d
        sleep 10
        . /lib/aux-cli/util/snippets/dhcpcd_unset
    # Else, run as normal
    else
        docker-compose pull && docker-compose up -d
    fi
}

update_pi() {
    # If hotspot mode is true, then do the work around
    if . /lib/aux-cli/util/snippets/hotspot_check; then
        . /lib/aux-cli/util/snippets/dhcpcd_set
        sleep 10
        sudo apt-get update && apt-get upgrade -y
        sleep 10
        . /lib/aux-cli/util/snippets/dhcpcd_unset
    # Else, run as normal
    else
        sudo apt-get update && apt-get upgrade -y
    fi
}

if [ $# -eq 0 ]; then
    echo ""
    echo "You need to specify what to update."
    help_menu
fi

while [[ $# -gt 0 ]]; do
    case "$1" in

    -a | --aux) #Set Hostname
        update_aux
        shift # past argument
        ;;
    -p | --pi) #Set Hostname
        update_pi
        shift # past argument
        ;;
    -h | -help | --help)
        help_menu
        shift # past argument
        ;;
    *) # any option
        err_msg "$1"
        shift # past argument
        ;;
    esac
done
