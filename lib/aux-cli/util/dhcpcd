#!/bin/bash
set -e

help_menu() {
    echo ""
    echo "Usage:    dhcpcd [OPTIONS]"
    echo ""
    echo "A tool that wraps the commands for allowing internet to passthrough a wired connection if available."
    echo ""
    echo "Options:"
    echo "-s    --set           Allows internet passthrough."
    echo "-u    --unset         Stops the internet passthrough."
    echo "-h    --help          Displays this help information."
    echo ""
    exit 1
}

err_msg() {
    echo ""
    echo "\"$1\" is an invalid argument."
    echo "Run dhcpcd -h for help."
    echo ""
    exit 1
}
raspiwifi_check() {
    . /etc/aux-cli.conf
    if [ "${raspiwifi}" == "false" ]; then
        echo "RaspiWiFi is not installed. There is no reason to set/unset dhcpcd."
        return 1
    fi
}

dhcpcd_set() {
    raspiwifi_check
    if aux-cli hotspot -c; then
        if grep -q "static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4" "/etc/dhcpcd.conf"; then
            echo "DHCPCD has already been set."
            return 1
        fi
        # if [ "$(cat /sys/class/net/eth0/operstate)" == "down" ]; then # TODO: Check for WiFi/Bluetooth Hotspot also.
        #     echo "You need a wired internet connection while in Hotspot/AP Mode to use the internet."
        #     return 1
        # fi
        echo "Modifying dchpcd.conf"
        echo "static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4" | sudo tee -a /etc/dhcpcd.conf

        echo "Reloading dhcpcd"
        sudo systemctl daemon-reload
        sudo systemctl restart dhcpcd
        sleep 10
    else
        echo "There's no need to dhcpcd set."
    fi
}

dhcpcd_unset() {
    raspiwifi_check
    if grep -q "static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4" "/etc/dhcpcd.conf"; then
        echo "Unmodifying dchpcd.conf"
        sudo sed -i '/static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4/d' /etc/dhcpcd.conf

        echo "Reloading dhcpcd"
        sudo systemctl daemon-reload
        sudo systemctl restart dhcpcd
        sleep 10
    else
        echo "DHCPCD wasn't set."
    fi
}

if [ $# -eq 0 ]; then
    echo ""
    echo "You need to pass an argument."
    help_menu
fi

while [[ $# -gt 0 ]]; do
    case "$1" in

    -s | --set) #Set Hostname
        dhcpcd_set
        break # past argument
        ;;
    -u | --unset) #Set Hostname
        dhcpcd_unset
        break # past argument
        ;;
    -h | -help | --help)
        help_menu
        break # past argument
        ;;
    *) # any option
        err_msg "$1"
        shift # past argument
        ;;
    esac
done
