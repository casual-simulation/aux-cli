#!/bin/bash
set -e

# Temporarily add this dir to the path so we can use helper commands
PATH=$PATH:/lib/auxcli/commands/helper

components_config="/etc/auxcli/components.json"
components=($(jq -r '.[] | select( .installed != null) | .name' $components_config 1> /dev/null))

# readarray splits each newline into one element in the array
readarray -t components_desc < <(jq -r '.[] | select( .installed != null) | .short_desc' $components_config 1> /dev/null)

usage() {
    printf "\nUsage:        auxcli reinstall [COMPONENT]\n\n"
    printf "Reinstall additional components of auxcli.\n\n"
    printf "COMPONENTS:\n"
    for ((i = 0; i < ${#components[@]}; i++)); do
        if installed ${components[$i]}; then
            printf "\t[x] %-24s\t%s\n" "${components[$i]}" "${components_desc[$i]}"
        else
            printf "\t[ ] %-24s\t%s\n" "${components[$i]}" "${components_desc[$i]}"
        fi
    done
    printf "\t    %-2s\t%-14s\t%s\n" "-h" "--help" "Displays this usage information."
    exit 1
}

err_check() {
    # First error check
    # Show the usage menu if there aren't any arguments
    # or if the argument is "-h" or "--help"
    if [ $# -eq 0 ] || [ $1 == "-h" ] || [ $1 == "--help" ]; then
        usage
    fi

    # Second error check
    # Throw an error messege if the first argument isn't a component
    if [[ ! ${components[*]} =~ $1 ]]; then
        printf "\n\"$1\" is not a valid component.\n"
        printf "Run 'auxcli reinstall -h' for help.\n\n"
        exit 1
    fi

    # Third error check
    # Throw an error messege if the component isn't installed
    if installed $1; then
        printf "\nThe \"$1\" component isn't installed.\n\n"
        exit 1
    fi
}

reinstall_component(){
    if available dhcpcd; then auxcli dhcpcd -s; fi
    while [[ $# -gt 0 ]]; do
        . /lib/auxcli/components/tool/$1/uninstall || . /lib/auxcli/components/hardware/$1/uninstall
        . /lib/auxcli/components/tool/$1/install || . /lib/auxcli/components/hardware/$1/install
        shift
    done
    if available dhcpcd; then auxcli dhcpcd -u; fi
}

err_check "$@"
reinstall_component "$@"
