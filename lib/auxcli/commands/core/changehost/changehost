#!/bin/bash
set -e

auxcli debug-printf "DEBUG (changehost): Config path: %s\n" "$config_changehost"

config_path=$(jq -r '.[] | select( .name == "changehost" ) | .config_path' /etc/auxcli/commands.json)

config="/etc/auxcli/config.json"
tmp="/etc/auxcli/config.json.tmp"
args_short=($(jq -r '.[].arg_short' $config_path))
args_long=($(jq -r '.[].arg_long' $config_path))
args=("${args_short[@]}" "${args_long[@]}")

# readarray splits each newline into one element in the array
readarray -t args_desc < <(jq '.[].short_desc' $config_path)
auxcli debug-printf "DEBUG (changehost): Current hostname is: %s\n" "$host"

usage() {
    printf "\nUsage:    auxcli changehost [OPTIONS]\n\n"
    printf "Changes the hostname in the necessary places.\n\n"
    printf "OPTIONS:\n"
    for ((i = 0; i < ${#args[@]}; i++)); do
        printf "\t%-2s\t%-10s\t%s\n" "${arg_short[$i]}" "${args_long[$i]}" "${args_desc[$i]}"
    done
    exit 1
}

err_check() {
    # First error check
    # Show the usage menu if there aren't any arguments
    auxcli debug-printf "DEBUG (changehost): First error check."
    if [ $# -eq 0 ]; then
        printf "\nYou need to pass an argument to change the hostname.\n"
        usage
    fi

    # Second error check
    # Throw an error messege if the first argument isn't valid
    auxcli debug-printf "DEBUG (changehost): Second error check."
    if [[ ! ${args[*]} =~ $1 ]]; then
        printf "\n\"%s\" is an invalid argument.\n" "$1"
        printf "Run auxcli changehost -h for help.\n\n"
        exit 1
    fi
}

# Change hostname in /etc/hosts & /etc/hostname
set_hostname() {

    # Set current hostname
    host=$(hostname)
    # Check if new hostname is provided/valid
    auxcli debug-printf "DEBUG (changehost): Hostname provided/valid check.\n"
    if [[ ${args[*]} =~ $2 ]] || [[ -z "$2" ]]; then
        printf "\n\"%s\" is an invalid argument for \"%s\".\n" "$2" "$1"
        printf "Run auxcli changehost -h for help.\n\n"
        exit 1
    fi

    # Check if new hostname is different
    auxcli debug-printf "DEBUG (changehost): Hostname different check.\n"
    if [ "$host" == "$2" ]; then
        printf "Your hostname is already %s.\n" "$2"
        exit 1
    fi

    if hostnamectl >/dev/null 2>&1; then
        auxcli debug-printf "DEBUG (changehost): This system has the command 'hostnamectl'.\n"
        if [ -e /etc/hosts ]; then
            auxcli debug-printf "DEBUG (changehost): /etc/hosts exists.\n"
            auxcli debug-printf "DEBUG (changehost): Modifying /etc/hosts\n"
            sudo sed -i "s/$host/$2/g" /etc/hosts
        fi
        auxcli debug-printf "DEBUG (changehost): Setting hostname with command 'hostnamectl'.\n"
        sudo hostnamectl set-hostname "$2"
        changed=true
        printf "\nHostname has been changed from %s to %s\n" "$host" "$2"
        auxcli debug-printf "DEBUG (changehost): Setting reboot_required to 'true'\n"
        auxcli write "config" "reboot_required" "true"
    elif hostname >/dev/null 2>&1; then
        auxcli debug-printf "DEBUG (changehost): This system has the command 'hostname'.\n"
        if [ -e /etc/hosts ]; then
            auxcli debug-printf "DEBUG (changehost): /etc/hosts exists.\n"
            auxcli debug-printf "DEBUG (changehost): Modifying /etc/hosts\n"
            sudo sed -i "s/$host/$2/g" /etc/hosts
        fi
        if [ -e /etc/hostname ]; then
            auxcli debug-printf "DEBUG (changehost): /etc/hostname exists.\n"
            auxcli debug-printf "DEBUG (changehost): Modifying /etc/hostname\n"
            sudo sed -i "s/$host/$2/g" /etc/hostname
        fi
        auxcli debug-printf "DEBUG (changehost): Setting hostname with command 'hostname'.\n"
        sudo hostname "$2"
        changed=true
        printf "\nHostname has been changed from %s to %s\n" "$host" "$2"
        auxcli debug-printf "DEBUG (changehost): Setting reboot_required to 'true'\n"
        auxcli write "config" "reboot_required" "true"
    else
        printf "Hostname was not changed. Your version of UNIX might not be currently supported.\n"
        changed=false
        auxcli debug-printf "DEBUG (changehost): Setting 'changed' to 'false'.\n"
        exit 1
    fi
}

err_check "$@"

while [[ $# -gt 0 ]]; do
    case "$1" in
    -n | --hostname)
        set_hostname "$1" "$2"
        shift # past argument
        shift # past value
        ;;
    -r | --reboot)
        auxcli debug-printf "DEBUG (changehost): Setting reboot_on_exit to 'true'\n"
        auxcli write "config" "reboot_on_exit" "true"
        shift # past argument
        ;;
    -h | -help | --help)
        usage
        shift # past argument
        ;;
    esac
done
