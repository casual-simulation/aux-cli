#!/bin/bash
set -e

if [ -f /etc/auxcli/config.json ]; then
    verbose=$(jq -r '.verbose' /etc/auxcli/config.json) 
else
    verbose=false
fi

config_path=$(jq -r '.[] | select( .name == "changehost" ) | .config_path' /etc/auxcli/commands.json)
if $verbose; then printf "DEBUG (changehost): Config path: %s\n" "$config_path"; fi

config="/etc/auxcli/config.json"
tmp="/etc/auxcli/config.json.tmp"
args_short=($(jq -r '.[].arg_short' $config_path))
args_long=($(jq -r '.[].arg_long' $config_path))
args=("${args_short[@]}" "${args_long[@]}")

# readarray splits each newline into one element in the array
readarray -t args_desc < <(jq '.[].short_desc' $config_path)

usage() {
    printf "\nUsage:    auxcli changehost [OPTIONS]\n\n"
    printf "Changes the hostname in the necessary places.\n\n"
    printf "OPTIONS:\n"
    for ((i = 0; i < ${#args[@]}; i++)); do
        printf "\t%-2s\t%-10s\t%s\n" "${arg_short[$i]}" "${args_long[$i]}" "${args_desc[$i]}"
    done
    exit 1
}

err_check() {
    # First error check
    # Show the usage menu if there aren't any arguments
    if $verbose; then printf "DEBUG (changehost): First error check."; fi
    if [ $# -eq 0 ]; then
        printf "\nYou need to pass an argument to change the hostname.\n"
        usage
    fi

    # Second error check
    # Throw an error messege if the first argument isn't valid
    if $verbose; then printf "DEBUG (changehost): Second error check."; fi
    if [[ ! ${args[*]} =~ $1 ]]; then
        printf "\n\"$1\" is an invalid argument.\n"
        printf "Run auxcli changehost -h for help.\n\n"
        exit 1
    fi
}

# Change hostname in /etc/hosts & /etc/hostname
set_hostname() {

    # Set current hostname
    host=$(hostname)
    if $verbose; then printf "DEBUG (changehost): Current hostname is: %s\n" "$host"; fi

    # Check if new hostname is provided/valid
    if $verbose; then printf "DEBUG (changehost): Hostname provided/valid check.\n"; fi
    if [[ ${args[*]} =~ $2 ]] || [[ -z "$2" ]]; then
        printf "\n\"$2\" is an invalid argument for \"$1\".\n"
        printf "Run auxcli changehost -h for help.\n\n"
        exit 1
    fi

    # Check if new hostname is different
    if $verbose; then printf "DEBUG (changehost): Hostname different check.\n"; fi
    if [ "$host" == "$2" ]; then
        printf "Your hostname is already $2.\n"
        exit 1
    fi

    if hostnamectl >/dev/null 2>&1; then
        if $verbose; then printf "DEBUG (changehost): This system has the command 'hostnamectl'.\n"; fi
        if [ -e /etc/hosts ]; then
            if $verbose; then printf "DEBUG (changehost): /etc/hosts exists.\n"; fi
            if $verbose; then printf "DEBUG (changehost): Modifying /etc/hosts\n"; fi
            sudo sed -i "s/$host/$2/g" /etc/hosts
        fi
        if $verbose; then printf "DEBUG (changehost): Setting hostname with command 'hostnamectl'.\n"; fi
        sudo hostnamectl set-hostname "$2"
        if $verbose; then printf "DEBUG (changehost): Setting 'changed' to 'true'.\n"; fi
        changed=true
        printf "\nHostname has been changed from $host to $2\n"
        if $verbose; then printf "DEBUG (changehost): Setting reboot_required to 'true'\n"; fi
        jq '(.reboot_required) = true' $config | sudo tee $tmp 1> /dev/null
        sudo mv -f $tmp $config
    elif hostname >/dev/null 2>&1; then
        if $verbose; then printf "DEBUG (changehost): This system has the command 'hostname'.\n"; fi
        if [ -e /etc/hosts ]; then
            if $verbose; then printf "DEBUG (changehost): /etc/hosts exists.\n"; fi
            if $verbose; then printf "DEBUG (changehost): Modifying /etc/hosts\n"; fi
            sudo sed -i "s/$host/$2/g" /etc/hosts
        fi
        if [ -e /etc/hostname ]; then
            if $verbose; then printf "DEBUG (changehost): /etc/hostname exists.\n"; fi
            if $verbose; then printf "DEBUG (changehost): Modifying /etc/hostname\n"; fi
            sudo sed -i "s/$host/$2/g" /etc/hostname
        fi
        if $verbose; then printf "DEBUG (changehost): Setting hostname with command 'hostname'.\n"; fi
        sudo hostname "$2"
        if $verbose; then printf "DEBUG (changehost): Setting 'changed' to 'true'.\n"; fi
        changed=true
        printf "\nHostname has been changed from $host to $2\n"
        if $verbose; then printf "DEBUG (changehost): Setting reboot_required to 'true'\n"; fi
        jq '(.reboot_required) = true' $config | sudo tee $tmp 1> /dev/null
        sudo mv -f $tmp $config
    else
        printf "Hostname was not changed. Your version of UNIX might not be currently supported.\n"
        if $verbose; then printf "DEBUG (changehost): Setting 'changed' to 'false'.\n"; fi
        changed=false
        exit 1
    fi
}

err_check "$@"

while [[ $# -gt 0 ]]; do
    case "$1" in
    -n | --hostname)
        set_hostname "$1" "$2"
        shift # past argument
        shift # past value
        ;;
    -r | --reboot)
        if $verbose; then printf "DEBUG (changehost): Setting reboot_on_exit to 'true'\n"; fi
        jq '(.reboot_on_exit) = true' $config | sudo tee $tmp 1> /dev/null
        sudo mv -f $tmp $config
        shift # past argument
        ;;
    -h | -help | --help)
        usage
        shift # past argument
        ;;
    esac
done
