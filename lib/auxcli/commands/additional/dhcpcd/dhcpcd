#!/bin/bash
set -e

# Config path for dhcpcd
config_dhcpcd=$(jq -r '.[] | select( .name == "dhcpcd" ) | .config_path' $config_commands)
. $path_to_helper/debug-printf "DEBUG (dhcpcd): Config path: %s\n" "$config_dhcpcd"

# Arguments for dhcpcd
readarray -t args_short < <(jq -r '.[].arg_short' $config_dhcpcd)
readarray -t args_long < <(jq -r '.[].arg_long' $config_dhcpcd)
readarray -t args_desc < <(jq -r '.[].short_desc' $config_dhcpcd)
args=("${args_short[@]}" "${args_long[@]}")

usage() {
    printf "\nUsage:    auxcli dhcpcd [OPTIONS]\n\n"
    printf "Wrapper for setting and unsetting dhcpcd settings.\n\n"
    printf "OPTIONS:\n"
    for ((i = 0; i < ${#args_desc[@]}; i++)); do
        printf "\t%-2s\t%-7s\t\t%s\n" "${args_short[$i]}" "${args_long[$i]}" "${args_desc[$i]}"
    done
    exit 1
}

err_check() {
    # First error check
    # Show the usage menu if there aren't any arguments
    . $path_to_helper/debug-printf "DEBUG (dhcpcd): Error Check: 1 of 2\n"
    if [ $# -eq 0 ]; then
        printf "\nYou need to pass an argument.\n"
        usage
    fi

    # Second error check
    # Throw an error messege if the first argument isn't valid
    . $path_to_helper/debug-printf "DEBUG (dhcpcd): Error Check: 2 of 2\n"
    if [[ ! ${args[*]} =~ $1 ]]; then
        printf "\n\"%s\" is an invalid argument.\n" "$1"
        printf "Run auxcli dhcpcd -h for help.\n\n"
        exit 1
    fi
}

dhcpcd_set() {
    if auxcli hotspot -c; then
        if grep -q "static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4" "/etc/dhcpcd.conf"; then
            printf "DHCPCD has already been set.\n"
            return 0
        fi
        # if [ "$(cat /sys/class/net/eth0/operstate)" == "down" ]; then # TODO: Check for WiFi/Bluetooth Hotspot also.
        #     echo "You need a wired internet connection while in Hotspot/AP Mode to use the internet."
        #     return 1
        # fi
        printf "Modifying dchpcd.conf...\n"
        printf "static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4\n" | sudo tee -a /etc/dhcpcd.conf

        printf "Reloading dhcpcd...\n"
        sudo systemctl daemon-reload
        sudo systemctl restart dhcpcd
        sleep 10
    else
        printf "There's no need to dhcpcd set.\n"
        return 0
    fi
}

dhcpcd_unset() {
    if auxcli hotspot -c; then
        if grep -q "static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4" "/etc/dhcpcd.conf"; then
            printf "Unmodifying dchpcd.conf...\n"
            sudo sed -i '/^static domain_name_servers=127.0.0.1 8.8.8.8 8.8.4.4/d' /etc/dhcpcd.conf

            printf "Reloading dhcpcd...\n"
            sudo systemctl daemon-reload
            sudo systemctl restart dhcpcd
            sleep 10
        else
            printf "DHCPCD wasn't set.\n"
        fi
    fi
}

err_check "$@"

while [[ $# -gt 0 ]]; do
    case "$1" in

    -s | --set) #Set Hostname
        dhcpcd_set
        break # past argument
        ;;
    -u | --unset) #Set Hostname
        dhcpcd_unset
        break # past argument
        ;;
    -h | -help | --help)
        usage
        break # past argument
        ;;
    esac
done
