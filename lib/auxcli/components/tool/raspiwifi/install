#!/bin/bash
set -e

install_path=$(jq -r '.[] | select( .name == "raspiwifi" ) | .install_path' /etc/auxcli/components.json)

# Add in our custom scripts to bypass interactivity
echo "DEBUG: Modifying RaspiWiFi..."
sudo cp -f "$install_path/initial_setup.py" $install_path/RaspiWiFi_modified
sudo cp -f "$install_path/config.json" $install_path/RaspiWiFi_modified
sudo cp -f "$install_path/reset_lib.py" $install_path/RaspiWiFi_modified/libs/reset_device

# Enable services before we hit a reboot
sudo systemctl enable auxcli-dnsmasq-checker
sudo systemctl start auxcli-dnsmasq-checker
sudo systemctl enable auxcli-hotspot-checker
sudo systemctl start auxcli-hotspot-checker
sudo systemctl enable auxcli-wlan-checker
sudo systemctl start auxcli-wlan-checker
sudo systemctl enable auxcli-wpa-checker
sudo systemctl start auxcli-wpa-checker

# Set installed/available to true before we hit a reboot
auxcli write "components" "raspiwifi" "installed" "true"
auxcli write "commands" "dhcpcd" "available" "true"
auxcli write "commands" "hotspot" "available" "true"

# Run the RaspiWiFi setup
echo "DEBUG: Running RaspiWiFi..."
cd $install_path/RaspiWiFi_modified
sudo python3 initial_setup.py # Triggers a reboot
